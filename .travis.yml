os: linux
dist: focal
language: ruby
rvm:
- 2.7.0
before_install:
- sudo apt-get update
- sudo apt-get install -y minify
- sudo apt-get install -y python3-pip
- sudo apt-get install -y curl
- sudo apt-get install -y snapd
- sudo apt-get install -y nodejs npm
- sudo npm cache clean -f
- sudo npm install -g n
- sudo n stable
- sudo npm install -g npm@latest
- sudo npm install netlify-cli -g
- sudo snap install yq
- bundle install
install:
- bundle install
- gem install jekyll
- gem install html-proofer --user-install
- pip install -r ./_python/requirements.txt
- export PATH="$PATH:/home/travis/.gem/ruby/2.7.0/bin"
script:
- python ./_python/generate_og.py
- travis_wait 60 bundle exec jekyll build
- minify --match='\.html' -r -o _site_min/ _site/
- rsync -av _site_min/ _site/
- htmlproofer --http-status-ignore "0,999,429,403,303" --allow_hash_href --url-ignore "/vectors.network/,/codepen.io/,/linkedin.com/,/twitter.com/,/t.co/,/arxiv.org/,/semi-technologies\/weaviate-io\/tree/" _site || travis_terminate 1
- |
  OPENAPI_VERSION=$(curl -s -o /dev/null -w "%{http_code}" https://app.swaggerhub.com/apiproxy/registry/semi-technologies/weaviate/$(cat _config.yml | yq .weaviate_version))
  if [[ $OPENAPI_VERSION -ne 200 ]]
  then
      echo "The current version is not on https://app.swaggerhub.com/apis/semi-technologies/weaviate/$(cat _config.yml | yq .weaviate_version)"
  fi
# generate version file
- cat _config.yml | yq .weaviate_version >> _site/version.txt
- |
  if [ "${TRAVIS_PULL_REQUEST}" = "false" ]; then
    if [ $TRAVIS_BRANCH = "main" ]; then
      # unpack secrets
      openssl aes-256-cbc -K $encrypted_617a65259523_key -iv $encrypted_617a65259523_iv -in key.master.json.enc -out key.master.json -d
      # Install gcloud
      gcloud version || true
      if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
      echo "LOAD SOURCE"
      source /home/travis/google-cloud-sdk/path.bash.inc
      gcloud version
      gcloud auth activate-service-account --key-file key.master.json
      rm key.master.json
      # set project
      gcloud config set project "$GS_PROJECT"
      # rm everything
      gsutil -m rm -r gs://$GS_BUCKET/**
      # cd into assets dir
      cd _site/
      # Upload data to bucket
      gsutil -m -h "Cache-Control:public,max-age=3600" cp -r ./ gs://$GS_BUCKET/
      # set access
      gsutil iam ch allUsers:objectViewer gs://$GS_BUCKET
      # set web service
      gsutil web set -m index.html -e 404.html gs://$GS_BUCKET
      # Invalidate the CDN
      gcloud compute url-maps invalidate-cdn-cache $GS_BUCKET --path "/*" --async
      # Send sitemap to Google
      curl https://www.google.com/ping?sitemap=https://weaviate.io/sitemap.xml
      # back to root
      cd ..
    fi
  fi
# set netlify
- rm _site/robots.txt
- |
    echo -e "User-agent: *
    Disallow: /" >> _site/robots.txt
- sudo netlify deploy --dir=_site --site=tangerine-buttercream-20c32f >> netlify.out
- rm _site/robots.txt 
# send to Slack
- export AUTHOR_NAME="$(git log -1 $TRAVIS_COMMIT --pretty="%aN")"
- export NETLIFY_LOC=$(grep -r 'Website Draft URL:' netlify.out)
- export NETLIFY_LOC_STRP=$(echo ${NETLIFY_LOC:29})
- |
    export MESSAGE="{ \"text\": \"Hey $AUTHOR_NAME - your website is live at: $NETLIFY_LOC_STRP \" }"
- echo $MESSAGE > payload.json
- |
    curl -X POST -H 'Content-type: application/json' -d @payload.json https://hooks.slack.com/services/$SLACK_BOT
cache: bundler
